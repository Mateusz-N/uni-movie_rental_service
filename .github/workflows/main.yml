name: Build and push Docker image to ACR, then deploy to ACI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build app Docker Image
        run: docker build -t matnos/uni-movie_rental_service:latest .

      - name: Build database Docker image
        run: docker build -t matnos/uni-movie_rental_database:latest -f Dockerfile-db .

      - name: Log in to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push app Docker Image to DockerHub
        run: docker push matnos/uni-movie_rental_service:latest

      - name: Push database Docker image to DockerHub
        run: docker push matnos/uni-movie_rental_database:latest

      - name: Log Docker
        run: docker logs
          
      # - name: Build database Docker Image
      #   run: docker build -t ${{ secrets.REGISTRY_NAME }}.azurecr.io/video-rental-database:latest .

      # - name: Push database Docker Image
      #   run: docker push ${{ secrets.REGISTRY_NAME }}.azurecr.io/video-rental-database:latest
          
      # - name: Build app Docker Image
      #   run: docker build -t ${{ secrets.REGISTRY_NAME }}.azurecr.io/video-rental-service:latest .

      # - name: Push app Docker Image
      #   run: docker push ${{ secrets.REGISTRY_NAME }}.azurecr.io/video-rental-service:latest

      - name: Deploy database to Azure Container Instances
        run: az container create --resource-group wypozyczalnia-wideo --file .github/workflows/aci_database.yml

      - name: Deploy app to Azure Container Instances
        run: az container create --resource-group wypozyczalnia-wideo --file .github/workflows/aci_service.yml

    env:
      MONGO_DB_URL: ${{ secrets.MONGODB_URI }}
      PORT: ${{ secrets.PORT }}
      SSL_CERT: ${{ secrets.SSL_CERT }}
      SSL_KEY: ${{ secrets.SSL_KEY }}
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
